{-# OPTIONS --without-K --exact-split --safe #-}

module PiSyntax where

-------------------------------------------------------------------------------------
-- Types

data U : Set where
  O : U
  I : U
  _+·µ§_ : U ‚Üí U ‚Üí U
  _√ó·µ§_ : U ‚Üí U ‚Üí U

infixr 40 _+·µ§_ _√ó·µ§_
infix 30 _‚ü∑‚ÇÅ_
infixr 10 _‚óé_
infixr 20 _‚äï_
infixr 30 _‚äó_

private
  variable
    t t‚ÇÅ t‚ÇÇ t‚ÇÉ t‚ÇÑ t‚ÇÖ t‚ÇÜ : U

-- 1-combinators

data _‚ü∑‚ÇÅ_  : U ‚Üí U ‚Üí Set where
  unite‚Çäl : O +·µ§ t ‚ü∑‚ÇÅ  t
  uniti‚Çäl : t ‚ü∑‚ÇÅ  O +·µ§ t
  unite‚ãÜl : I √ó·µ§ t ‚ü∑‚ÇÅ  t
  uniti‚ãÜl : t ‚ü∑‚ÇÅ  I √ó·µ§ t
  unite‚Çä  : t +·µ§ O ‚ü∑‚ÇÅ  t
  uniti‚Çä  : t ‚ü∑‚ÇÅ  t +·µ§ O
  unite‚ãÜ  : t √ó·µ§ I ‚ü∑‚ÇÅ  t
  uniti‚ãÜ  : t ‚ü∑‚ÇÅ t √ó·µ§ I
  swap‚Çä   : t‚ÇÅ +·µ§ t‚ÇÇ ‚ü∑‚ÇÅ  t‚ÇÇ +·µ§ t‚ÇÅ
  swap‚ãÜ   : t‚ÇÅ √ó·µ§ t‚ÇÇ ‚ü∑‚ÇÅ  t‚ÇÇ √ó·µ§ t‚ÇÅ
  assocl‚Çä : t‚ÇÅ +·µ§ (t‚ÇÇ +·µ§ t‚ÇÉ) ‚ü∑‚ÇÅ (t‚ÇÅ +·µ§ t‚ÇÇ) +·µ§ t‚ÇÉ
  assocr‚Çä : (t‚ÇÅ +·µ§ t‚ÇÇ) +·µ§ t‚ÇÉ ‚ü∑‚ÇÅ t‚ÇÅ +·µ§ (t‚ÇÇ +·µ§ t‚ÇÉ)
  assocl‚ãÜ : t‚ÇÅ √ó·µ§ (t‚ÇÇ √ó·µ§ t‚ÇÉ) ‚ü∑‚ÇÅ (t‚ÇÅ √ó·µ§ t‚ÇÇ) √ó·µ§ t‚ÇÉ
  assocr‚ãÜ : (t‚ÇÅ √ó·µ§ t‚ÇÇ) √ó·µ§ t‚ÇÉ ‚ü∑‚ÇÅ t‚ÇÅ √ó·µ§ (t‚ÇÇ √ó·µ§ t‚ÇÉ)
  absorbr : O √ó·µ§ t ‚ü∑‚ÇÅ O
  absorbl : t √ó·µ§ O ‚ü∑‚ÇÅ O
  factorzr : O ‚ü∑‚ÇÅ  t √ó·µ§ O
  factorzl : O ‚ü∑‚ÇÅ  O √ó·µ§ t
  dist : (t‚ÇÅ +·µ§ t‚ÇÇ) √ó·µ§ t‚ÇÉ ‚ü∑‚ÇÅ (t‚ÇÅ √ó·µ§ t‚ÇÉ) +·µ§ (t‚ÇÇ √ó·µ§ t‚ÇÉ)
  distl : t‚ÇÉ √ó·µ§ (t‚ÇÅ +·µ§ t‚ÇÇ) ‚ü∑‚ÇÅ (t‚ÇÉ √ó·µ§ t‚ÇÅ) +·µ§ (t‚ÇÉ √ó·µ§ t‚ÇÇ)
  factor : {t‚ÇÅ t‚ÇÇ t‚ÇÉ : U} ‚Üí (t‚ÇÅ √ó·µ§ t‚ÇÉ) +·µ§ (t‚ÇÇ √ó·µ§ t‚ÇÉ) ‚ü∑‚ÇÅ (t‚ÇÅ +·µ§ t‚ÇÇ) √ó·µ§ t‚ÇÉ
  factorl : {t‚ÇÅ t‚ÇÇ t‚ÇÉ : U} ‚Üí (t‚ÇÉ √ó·µ§ t‚ÇÅ) +·µ§ (t‚ÇÉ √ó·µ§  t‚ÇÇ) ‚ü∑‚ÇÅ t‚ÇÉ √ó·µ§ (t‚ÇÅ +·µ§ t‚ÇÇ)
  id‚ü∑‚ÇÅ  : t ‚ü∑‚ÇÅ  t
  _‚óé_     : (t‚ÇÅ ‚ü∑‚ÇÅ t‚ÇÇ) ‚Üí (t‚ÇÇ ‚ü∑‚ÇÅ t‚ÇÉ) ‚Üí (t‚ÇÅ ‚ü∑‚ÇÅ t‚ÇÉ)
  _‚äï_     : (t‚ÇÅ ‚ü∑‚ÇÅ t‚ÇÉ) ‚Üí (t‚ÇÇ ‚ü∑‚ÇÅ t‚ÇÑ) ‚Üí (t‚ÇÅ +·µ§ t‚ÇÇ ‚ü∑‚ÇÅ t‚ÇÉ +·µ§ t‚ÇÑ)
  _‚äó_     : (t‚ÇÅ ‚ü∑‚ÇÅ t‚ÇÉ) ‚Üí (t‚ÇÇ ‚ü∑‚ÇÅ t‚ÇÑ) ‚Üí (t‚ÇÅ √ó·µ§ t‚ÇÇ ‚ü∑‚ÇÅ t‚ÇÉ √ó·µ§ t‚ÇÑ)

-- Equational reasoning

infixr 10 _‚ü®_‚ü©_
infix  15 _‚àé

_‚ü®_‚ü©_ : (t‚ÇÅ : U) ‚Üí (t‚ÇÅ ‚ü∑‚ÇÅ  t‚ÇÇ) ‚Üí (t‚ÇÇ ‚ü∑‚ÇÅ  t‚ÇÉ) ‚Üí (t‚ÇÅ ‚ü∑‚ÇÅ  t‚ÇÉ)
_ ‚ü® c‚ÇÅ ‚ü© c‚ÇÇ = c‚ÇÅ ‚óé c‚ÇÇ

_‚àé : (t : U) ‚Üí t ‚ü∑‚ÇÅ  t
_‚àé t = id‚ü∑‚ÇÅ

-- Inverse
!‚ü∑‚ÇÅ : t‚ÇÅ ‚ü∑‚ÇÅ  t‚ÇÇ ‚Üí t‚ÇÇ ‚ü∑‚ÇÅ  t‚ÇÅ
!‚ü∑‚ÇÅ unite‚Çäl = uniti‚Çäl
!‚ü∑‚ÇÅ uniti‚Çäl = unite‚Çäl
!‚ü∑‚ÇÅ unite‚ãÜl = uniti‚ãÜl
!‚ü∑‚ÇÅ uniti‚ãÜl = unite‚ãÜl
!‚ü∑‚ÇÅ unite‚Çä  = uniti‚Çä
!‚ü∑‚ÇÅ uniti‚Çä  = unite‚Çä
!‚ü∑‚ÇÅ unite‚ãÜ  = uniti‚ãÜ
!‚ü∑‚ÇÅ uniti‚ãÜ  = unite‚ãÜ
!‚ü∑‚ÇÅ swap‚Çä   = swap‚Çä
!‚ü∑‚ÇÅ swap‚ãÜ   = swap‚ãÜ
!‚ü∑‚ÇÅ assocl‚Çä = assocr‚Çä
!‚ü∑‚ÇÅ assocr‚Çä = assocl‚Çä
!‚ü∑‚ÇÅ assocl‚ãÜ = assocr‚ãÜ
!‚ü∑‚ÇÅ assocr‚ãÜ = assocl‚ãÜ
!‚ü∑‚ÇÅ absorbr = factorzl
!‚ü∑‚ÇÅ absorbl = factorzr
!‚ü∑‚ÇÅ factorzr = absorbl
!‚ü∑‚ÇÅ factorzl = absorbr
!‚ü∑‚ÇÅ dist = factor
!‚ü∑‚ÇÅ distl = factorl
!‚ü∑‚ÇÅ factorl = distl
!‚ü∑‚ÇÅ factor = dist
!‚ü∑‚ÇÅ id‚ü∑‚ÇÅ = id‚ü∑‚ÇÅ
!‚ü∑‚ÇÅ (c‚ÇÅ ‚óé c‚ÇÇ) = !‚ü∑‚ÇÅ c‚ÇÇ ‚óé !‚ü∑‚ÇÅ c‚ÇÅ
!‚ü∑‚ÇÅ (c‚ÇÅ ‚äï c‚ÇÇ) = !‚ü∑‚ÇÅ c‚ÇÅ ‚äï !‚ü∑‚ÇÅ c‚ÇÇ
!‚ü∑‚ÇÅ (c‚ÇÅ ‚äó c‚ÇÇ) = !‚ü∑‚ÇÅ c‚ÇÅ ‚äó !‚ü∑‚ÇÅ c‚ÇÇ

ùüö : U
ùüö = I +·µ§ I

cx : ùüö √ó·µ§ ùüö ‚ü∑‚ÇÅ ùüö √ó·µ§ ùüö
cx = dist ‚óé ((id‚ü∑‚ÇÅ ‚äó swap‚Çä) ‚äï id‚ü∑‚ÇÅ) ‚óé factor

-------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------
